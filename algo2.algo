ALGORITHM array-method
VAR
    tab1 : ARRAY_OF INTEGER[5];
    tab2 : ARRAY_OF INTEGER[5];
    i,j : INTEGER := 0
    //total of different nums
    sum : INTEGER := 0
    //total of common nums
    common : INTEGER := 0
    verif : BOOLEAN := false
BEGIN
    read(tab1)
    read(tab2)

    FOR i FROM 0 TO tab1.length -1 STEP 1  DO
        FOR j FROM 0 TO tab2.length - 1 STEP 1 DO
            IF (tab1[i] = tab2[j]) THEN
                verif := true
            END_IF
        END_FOR
        IF (verif = false) THEN
            sum = sum +tab1[i]
        ELSE
            common = common +tab1[i]
        END_IF
        verif := false
    END_FOR

    FOR j FROM 0 TO tab2.length -1 STEP 1  DO
        FOR i FROM 0 TO tab1.length - 1 STEP 1 DO
            IF (tab2[j] = tab1[i]) THEN
                verif = true
            END_IF
        END_FOR
        IF (verif := false) THEN
            sum = sum +tab2[j]
        ELSE
            common = common +tab2[j]
        END_IF
        verif := false
    END_FOR
    
    write(sum)
    write(common)
END



ALGORITHM hash-table-method
VAR
    hTable : HASH_TABLE <INTEGER, INTEGER>
    tab1, tab2 : ARRAY_OF INTEGER[]
    i, j : INTEGER
    sum, common : INTEGER
    verif : BOOLEAN := false
    newTable : ARRAY_OF INTEGER[]
BEGIN
    FOR i FROM 0 TO i < tab1.length DO
        FOR j FROM 0 TO j < tab2.length  DO
            IF (tab1[i] = tab2[j]) THEN
                verif := true
            END_IF
        END_FOR
        IF (verif = false) THEN
            hTable.insert(tab1[i], 1)
            ELSE IF (hTable.lookup(tab1[i])) THEN
                hTable.insert(tab1[i], hTable.get(tab1[i])+1)
                END_IF
        END_IF
    END_FOR
    
    FOR j FROM 0 TO j < tab1.length DO
        FOR i FROM 0 TO i < tab2.length  DO
            IF (tab2[j] = tab1[i]) THEN
                verif := true
            END_IF
        END_FOR
        IF (verif = false) THEN
            hTable.insert(tab2[j], 1)
            ELSE IF (hTable.lookup(tab2[j])) THEN
                hTable.insert(tab2[j], hTable.get(tab2[j])+1)
                END_IF
        END_IF
    END_FOR

    newTable := hTable.getkeys()
    FOR i FROM 0 TO i < newTable.length  DO
        IF (hTable.get(newTable[i])= 1) THEN
            sum = sum + newTable[i] ELSE
            common = common + newTable[i] * 2
        END_IF
    END_FOR

    write(sum)
    write(common)
END